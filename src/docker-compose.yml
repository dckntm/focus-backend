version: "3.1"

services:

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: "rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "5672:5672"
      - "15672:15672"
    
# MongoDB databases

  constructor_storage:
    image: mongo
    container_name: constructor_storage
    restart: always
    
  scheduler_storage:
    image: mongo
    container_name: scheduler_storage
    restart: always
  
  identity_storage:
    image: mongo
    container_name: identity_storage
    restart: always

  processor_storage:
    image: mongo
    container_name: processor_storage
    restart: always

# mongo-express

  identity_storage_gui:
    image: mongo-express
    container_name: identity_storage_gui
    restart: always
    ports:
      - "8281:8081"
    depends_on:
      - identity_storage
    environment:
      - ME_CONFIG_MONGODB_SERVER=identity_storage
      - ME_CONFIG_MONGODB_PORT=27017

  constructor_storage_gui:
    image: mongo-express
    container_name: constructor_storage_gui
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - constructor_storage
    environment:
      - ME_CONFIG_MONGODB_SERVER=constructor_storage
      - ME_CONFIG_MONGODB_PORT=27017

  scheduler_storage_gui:
    image: mongo-express
    container_name: scheduler_storage_gui
    restart: always
    ports:
      - "8481:8081"
    depends_on:
      - scheduler_storage
    environment:
      - ME_CONFIG_MONGODB_SERVER=scheduler_storage
      - ME_CONFIG_MONGODB_PORT=27017

  processor_storage_gui:
    image: mongo-express
    container_name: processor_storage_gui
    restart: always
    ports:
      - "8381:8081"
    depends_on:
      - processor_storage
    environment:
      - ME_CONFIG_MONGODB_SERVER=processor_storage
      - ME_CONFIG_MONGODB_PORT=27017

# services

  constructor:
    build: ./Focus.Service.ReportConstructor/
    image: focus.constructor
    restart: always
    hostname: "constructor"
    container_name: constructor
    depends_on:
      - constructor_storage
    environment:
      - ASPNETCORE_ENVIRONMENT=dev
      - ASPNETCORE_URLS=http://*:5000

  scheduler:
    build: ./Focus.Service.ReportScheduler/
    image: focus.scheduler
    restart: always
    hostname: "scheduler"
    container_name: scheduler
    depends_on:
      - scheduler_storage
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=dev
      - ASPNETCORE_URLS=http://*:5000

  automator:
    build: ./Focus.Service.Automator/
    image: focus.automator
    container_name: automator
    restart: always
    depends_on: 
      - rabbitmq
    environment: 
      - DOTNET_ENVIRONMENT=dev

  identity:
    build: ./Focus.Service.Identity/
    image: focus.identity
    restart: always
    hostname: "identity"
    container_name: identity
    depends_on: 
      - identity_storage
    environment: 
      - ASPNETCORE_ENVIRONMENT=dev
      - ASPNETCORE_URLS=http://*:5000

  processor:
    build: ./Focus.Service.ReportProcessor/
    image: focus.processor
    restart: always
    hostname: "processor"
    container_name: processor
    depends_on: 
      - processor_storage
    environment: 
      - ASPNETCORE_ENVIRONMENT=dev
      - ASPNETCORE_URLS=http://*:5000

  gateway: 
    build: ./Focus.Service.Gateway/
    image: focus.gateway
    restart: always
    ports:
      - "5000:5000"
    container_name: gateway
    depends_on: 
      - constructor
      - scheduler
      - processor
      - identity
    environment: 
      - ASPNETCORE_URLS=http://*:5000